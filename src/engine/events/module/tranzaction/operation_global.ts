import { timer_text_oper } from "../../../.."


//–ú–æ–¥—É–ª—å –≤–æ–≤–∑–≤—Ä–∞—Ç–∞
export async function Back(id: number, context: any) {
    console.log(`Admin ${context.senderId} canceled operation for user UID: ${id}`)
    await context.send(`‚öô –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.`)
}

//–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 
export async function Ipnut_Gold(context: any, operation: string) {
    let golden: number = 0
    let money_check = false
    while (money_check == false) {
        const gold: any = await context.question(`üß∑ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operation}: `, timer_text_oper)
        if (gold.isTimeout) { await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ${operation} –∏—Å—Ç–µ–∫–ª–æ!`); return golden }
        if (typeof Number(gold.text) == "number") {
            money_check = true
            golden = Number(gold.text)
        } 
    }
    return golden
}
export async function Ipnut_Message(context: any, operation: string) {
    let golden = ''
    let money_check = false
    while (money_check == false) {
        const gold = await context.question(`üß∑ –í–≤–µ–¥–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operation}:`, timer_text_oper)
        if (gold.isTimeout) { await context.send(`‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${operation} –∏—Å—Ç–µ–∫–ª–æ!`); return "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç." }
        if (gold.text) {
            money_check = true
            golden = gold.text
        } 
    }
    return golden
}