import { Keyboard } from "vk-io";
import prisma from "../prisma_client";
import { answerTimeLimit, chat_id } from "../../../..";
import { User_Info } from "../tool";
import { Keyboard_Index, Logger, Send_Message } from "../../../core/helper";
import { Person_Detector } from "./person";
import { ico_list } from "../data_center/icons_lib";

export async function Account_Register(context: any) {
    //–ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö
	const user_check = await prisma.account.findFirst({ where: { idvk: context.senderId } })
	//–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Ç–æ –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
	if (!user_check) {
		//—Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
		const answer = await context.question(`${ico_list['load'].ico} –í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ –ú–∞–≥–æ–º–∏—Ä–∞, –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞ –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–ª–∏ –¥–≤–∞ –æ—Ä–∫–∞ –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–ª–∏: \n‚Äî –ú–∏–Ω–∏—Å—Ç—Ä –ú–∞–≥–∏–∏ –≥–æ–≤–æ—Ä–∏–ª –Ω–∞–º –æ –≤–∞—Å. –ù–æ –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —Ä–∞—Å–ø–∏—à–∏—Ç–µ—Å—å –∑–¥–µ—Å—å –æ —Å–≤–æ–µ–º —Å–æ–≥–ª–∞—Å–∏–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. \n–í —Ç–æ—Ç –∂–µ –º–∏–≥ –≤ –≤–∞—à–∏—Ö —Ä—É–∫–∞—Ö –º–∞–≥–∏—á–µ—Å–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ—è–≤–∏–ª—Å—è –ø–µ—Ä–≥–∞–º–µ–Ω—Ç. \n${ico_list['help'].ico} –£ –≤–∞—Å –µ—Å—Ç—å 5 –º–∏–Ω—É—Ç –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è!`,
			{	
				keyboard: Keyboard.builder()
				.textButton({ label: '‚úè', payload: { command: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' }, color: 'positive' }).row()
				.textButton({ label: 'üë£', payload: { command: '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' }, color: 'negative' }).oneTime(),
				answerTimeLimit
			}
		);
		if (answer.isTimeout) { return await context.send(`${ico_list['time'].ico} –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è –∏—Å—Ç–µ–∫–ª–æ!`) }
		if (!/–¥–∞|yes|–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è|–∫–æ–Ω–µ—á–Ω–æ|‚úè/i.test(answer.text|| '{}')) {
			await context.send(`${ico_list['cancel'].ico} –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –¥–∞—Ç—å —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ, –∞ –∂–∏–≤—ã–º –æ—Ç—Å—é–¥–∞ –Ω–∏–∫—Ç–æ –Ω–µ —É—Ö–æ–¥–∏–ª, –≤–∞—Å —É–ø–∞–∫–æ–≤–∞–ª–∏!`);
			return;
		}
		//–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞
		const visit = await context.question(`${ico_list['load'].ico} –ü–æ—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å, –≤—ã, —Å—Ç–∞—Ä–∞—è—Å—å –Ω–µ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Å–æ –Ω–∞ –æ—Ä–∫–æ–≤, –≤–æ—à–ª–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞, –∏ —É–≤–∏–¥–µ–ª–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ —ç–ª—å—Ñ–∞, –Ω–∞–≤–æ–¥—è—â–µ–≥–æ –ø–æ—Ä—è–¥–æ–∫, —É–∂–∞—Å –∏ —Å—Ç—Ä–∞—Ö.`,
			{ 	
				keyboard: Keyboard.builder()
				.textButton({ label: '–ü–æ–¥–æ–π—Ç–∏ –∏ –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è', payload: { command: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è' }, color: 'positive' }).row()
				.textButton({ label: '–ñ–¥–∞—Ç—å, –ø–æ–∫–∞ —ç–ª—å—Ñ –∑–∞–∫–æ–Ω—á–∏—Ç', payload: { command: '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è' }, color: 'negative' }).oneTime().inline(),
				answerTimeLimit
			}
		);
		if (visit.isTimeout) { return await context.send(`${ico_list['time'].ico} –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Å—Ç–µ–∫–ª–æ!`) }
		const save = await prisma.account.create({	data: {	idvk: context.senderId } })
		const info = await User_Info(context)
		await context.send(`${ico_list['load'].ico} –≠–ª—å—Ñ –æ—Ç–≤–ª–µ–∫—Å—è –æ—Ç –¥–µ–ª, –∑–∞–ø—Ä–∏–º–µ—Ç–∏–≤ –≤–∞—Å, –ø–æ–¥–æ—à–µ–ª –∏ —Å–∫–∞–∑–∞–ª.\n‚Äî –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –º–µ—á–∞ –∏ –º–∞–≥–∏–∏! \n–ò –ø—Ä–æ—Ç—è–Ω—É–ª –≤–∞–º –≤–∞—à—É –∫–∞—Ä—Ç–æ—á–∫—É.\n${ico_list['save'].ico} –í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç–æ—Ç–µ–∫—É, ${info.first_name}\n${ico_list['cardg'].ico} GUID: ${save.id}. \n${ico_list['monitor'].ico} idvk: ${save.idvk}\n${ico_list['date'].ico} –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${save.crdate}\n`)
		await Logger(`In database created new user with uid [${save.id}] and idvk [${context.senderId}]`)
		await context.send(`${ico_list['warn'].ico} –ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã "–¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ –ú–∞–≥–æ–º–∏—Ä–∞":`,{ 	
			keyboard: Keyboard.builder()
			.urlButton({ label: '‚ö° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', url: `https://vk.com/@bank_mm-instrukciya-po-polzovaniu-botom-centrobanka-magomira` }).row().inline().oneTime(),
			answerTimeLimit
		})
		const check_bbox = await prisma.blackBox.findFirst({ where: { idvk: context.senderId } })
		const ans_selector = `${ico_list['save'].ico} –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ [${!check_bbox ? "–ª–µ–≥–∞–ª—å–Ω–æ" : "–ù–ï–õ–ï–ì–ê–õ–¨–ù–û"}] GUID-${save.id}:\nüë§ @id${save.idvk}(${info.first_name} ${info?.last_name})`
		await Send_Message(chat_id, `${ans_selector}`)
		await Person_Detector(context)
		await Keyboard_Index(context, `${ico_list['help'].ico} –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ö–æ–≥–¥–∞ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏, –Ω–∞–ø–∏—à–∏—Ç–µ [!–±–∞–Ω–∫] –±–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ—á–µ–∫, –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: ‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é!`)
	} else {
		await Person_Detector(context)
		await Keyboard_Index(context, `${ico_list['load'].ico} –ó–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`)
	}
}