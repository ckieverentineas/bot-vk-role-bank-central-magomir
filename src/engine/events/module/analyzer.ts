import { Analyzer, User } from "@prisma/client"
import prisma from "./prisma_client"
import { randomInt } from "crypto"
import { chat_id, vk } from "../../.."
import { Person_Get } from "./person/person"
import { Logger } from "../../core/helper"

export async function Analyzer_Init(id_user: number) {
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    if (!analyzer) {
        const analyze_init: Analyzer | null = await prisma.analyzer.create({ data: { id_user: id_user } })
        if (analyze_init) { console.log(`Analyzer module activation for user UID ${id_user}`) }
    }
}

interface Achivied {
    uid: number,
    name: string,
    subname: String[]
    description: string,
    counter: number
}

export async function Analyzer_Birthday_Counter(context: any) {
    const user: User | null | undefined = await Person_Get(context)
    if (!user) { return }
    const id_user = user.id
    await Analyzer_Init(id_user)
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    const birthday: Achivied[] = [
        { uid: 1, name: "–£—á–µ–Ω–∏–∫", subname: ["–ù–æ–≤–∏—á–æ–∫", "–ú–∞–ª–µ–Ω—å–∫–∏–π –ú–∞–≥", "–ë–æ—Ç–∞–Ω–∏–∫"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 1 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 1 }, 
        { uid: 2, name: "–ü–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ú–æ–ª–æ–¥–æ–π –ß–∞—Ä–æ–¥–µ–π", "–ù–∞–¥–µ–∂–¥–∞ –•–æ–≥–≤–∞—Ä—Ç—Å–∞", "–ò–∑–±—Ä–∞–Ω–Ω–∏–∫"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 2 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 2 },
        { uid: 3, name: "–í—Ç–æ—Ä–æ–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ë–ª–µ—Å—Ç—è—â–∏–π –£—á–µ–Ω–∏–∫", "–û–¥–∞—Ä–µ–Ω–Ω—ã–π –ú–∞–≥", "–ú–∞—Å—Ç–µ—Ä –ò–ª–ª—é–∑–∏–π"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 3 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 3 },
        { uid: 4, name: "–¢—Ä–µ—Ç—å–µ–∫—É—Ä—Å–Ω–∏–∫", subname: ["–¢–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π –í–æ–ª—à–µ–±–Ω–∏–∫", "–ú–∞—Å—Ç–µ—Ä –ß–∞—Ä–æ–¥–µ–π—Å—Ç–≤–∞", "–û—Ö–æ—Ç–Ω–∏–∫ –Ω–∞ –°–æ–∫—Ä–æ–≤–∏—â–∞"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 4 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 4 },
        { uid: 5, name: "–ß–µ—Ç–≤–µ—Ä—Ç–æ–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å –ó–Ω–∞–Ω–∏–π", "–ú–∞—Å—Ç–µ—Ä –ó–∞–∫–ª–∏–Ω–∞–Ω–∏–π", "–í–ª–∞–¥—ã–∫–∞ –ò–Ω—Ç—Ä–∏–≥"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 5 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 5 },
        { uid: 6, name: "–ü—è—Ç—ë—Ä–∫–æ–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ì–µ—Ä–æ–π –•–æ–≥–≤–∞—Ä—Ç—Å–∞", "–ú–∞–≥–∏—Å—Ç—Ä –¢—Ä–∞–Ω—Å—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", "–ß–∞—Ä–æ–¥–µ–π-–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 6 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 6 },
        { uid: 7, name: "–®–µ—Å—Ç–∏–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ú–∞–≥ –°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞", "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≠–ª–µ–º–µ–Ω—Ç–æ–≤", "–ú–∞—Å—Ç–µ—Ä –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 7 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 7 },
        { uid: 8, name: "–°–µ–¥—å–º–∏–∫—É—Ä—Å–Ω–∏–∫", subname: ["–ì–µ—Ä–æ–π –í–æ–π–Ω—ã", "–ú–∞–≥–∏—Å—Ç—Ä –Ø–¥–∞", "–í–æ–∏—Ç–µ–ª—å –°–≤–µ—Ç–∞"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 8 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 8 },
        { uid: 9, name: "–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ß–µ–º–ø–∏–æ–Ω –•–æ–≥–≤–∞—Ä—Ç—Å–∞", subname: ["–ù–µ—É–∫—Ä–æ—Ç–∏–º—ã–π –õ–∏–¥–µ—Ä", "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –¢—å–º—ã", "–ú–∞–≥ –í–µ–ª–∏–∫–æ–≥–æ –£—Ä–æ–≤–Ω—è"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 9 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 9 },
        { uid: 10, name: "–ú–∞–≥–∏—Å—Ç—Ä –ó–∞–∫–æ–Ω–∞", subname: ["–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", "–ß–µ–º–ø–∏–æ–Ω –û—Ä–¥–µ–Ω–∞ –§–µ–Ω–∏–∫—Å–∞", "–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å –ú–∏—Ä–∞"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 10 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 10 },
        { uid: 11, name: "–í–ª–∞–¥—ã–∫–∞ –ó–∞–∫–ª–∏–Ω–∞–Ω–∏–π", subname: ["–ú–∞–≥–∏—Å—Ç—Ä –û–≥–Ω—è", "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –í—Ä–µ–º–µ–Ω–∏", "–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å –ú–∞–≥–∏–∏"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 11 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 11 },
        { uid: 12, name: "–ú–∞–≥-–°—Ç—Ä–∞–Ω–Ω–∏–∫", subname: ["–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", "–í–ª–∞–¥—ã–∫–∞ –ù–æ—á–∏", "–ú–∞—Å—Ç–µ—Ä –¢–∞–π–Ω"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 12 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 12 },
        { uid: 13, name: "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –†–∞–≤–Ω–æ–≤–µ—Å–∏—è", subname: ["–ú–∞–≥–∏—Å—Ç—Ä –ë–∞–ª–∞–Ω—Å–∞", "–í–ª–∞–¥—ã–∫–∞ –°—Ç–∏—Ö–∏–π", "–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å –ü—Ä–∏—Ä–æ–¥—ã"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 13 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 13 },
        { uid: 14, name: "–ì–µ—Ä–æ–π –õ–µ–≥–µ–Ω–¥—ã", subname: ["–ú–∞—Å—Ç–µ—Ä –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –ò—Å–∫—É—Å—Å—Ç–≤", "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –ú–∏—Ä–æ–≤", "–ß–µ–º–ø–∏–æ–Ω –•–∞–æ—Å–∞"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 14 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 14 },
        { uid: 15, name: "–í–æ–ª—à–µ–±–Ω—ã–π –ö–æ—Ä–æ–ª—å", subname: ["–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ú–∞–≥", "–ü—Ä–∞–≤–∏—Ç–µ–ª—å –í–æ–ª—à–µ–±–Ω–æ–≥–æ –ú–∏—Ä–∞", "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –¢–∞–π–Ω"], description: "–ù–∞–≥—Ä–∞–¥–∞ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 15 –≥–æ–¥–∞ –≤ —Ä–æ–ª–µ–≤–æ–π", counter: 15 },
    ]
    if (analyzer) {
        const analyze_birthday_counter: Analyzer | null = await prisma.analyzer.update({ where: { id: analyzer.id }, data: { birthday: { increment: 1 } } })
        if (analyze_birthday_counter) { 
            console.log(`Analyzer module detected birthday for user UID ${id_user}`)
            for (const i in birthday) {
                if (analyze_birthday_counter.birthday >= birthday[i].counter) {
                    const achive_check = await prisma.achievement.findFirst({ where: { uid: birthday[i].uid, id_user: id_user } })
                    if (!achive_check) {
                        const achive_add = await prisma.achievement.create({ data: { uid: birthday[i].uid, name: `üéÅ ${birthday[i].name} - ${birthday[i].subname[randomInt(0, 3)]}`, id_user: id_user } })
                        if (achive_add) {
                            const xp = randomInt(1, 15)
                            await prisma.user.update({ where: { id: id_user }, data: { medal: { increment: xp } } })
                            await vk.api.messages.send({
                                peer_id: user.idvk,
                                random_id: 0,
                                message: `üåü –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name}`
                            })
                            await vk.api.messages.send({
                                peer_id: chat_id,
                                random_id: 0,
                                message: `üåü @id${user.idvk}(${user.name}) –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name} –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ —Å—á–µ—Ç ${xp}üßô.`
                            })
                        }
                    }
                }
            }
        }
    }
}

export async function Analyzer_Kvass_Counter(context: any) {
    const user: User | null | undefined = await Person_Get(context)
    if (!user) { return }
    const id_user = user.id
    await Analyzer_Init(id_user)
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    const birthday: Achivied[] = [
        { uid: 16, name: "–ù–æ–≤–∏—á–æ–∫", subname: ["–ù–∏–∑–∫–∏–π —Å—Ç–∞—Ä—Ç", "–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –≥—Ä–∞–¥—É—Å", "–ö–∞–π—Ñ—É–ª–µ—á–∫–∏"], description: "–ü–µ—Ä–≤–æ–µ —Å–ª–∏–≤–æ—á–Ω–æ–µ –ø–∏–≤–æ", counter: 1 }, 
        { uid: 17, name: "–ó–Ω–∞—Ç–æ–∫", subname: ["–ó–Ω–∞—Ç–æ–∫", "–ò—Å–∫—É—à–µ–Ω–Ω—ã–π", "–û–ø—ã—Ç–Ω—ã–π"], description: "–ü—è—Ç—å —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 5 },
        { uid: 18, name: "–≠–∫—Å–ø–µ—Ä—Ç", subname: ["–≠–∫—Å–ø–µ—Ä—Ç", "–ú–∞—Å—Ç–µ—Ä", "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"], description: "–î–µ—Å—è—Ç—å —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 10 },
        { uid: 19, name: "–ú–∞–≥", subname: ["–ú–∞–≥", "–ß–∞—Ä–æ–¥–µ–π", "–í–æ–ª—à–µ–±–Ω–∏–∫"], description: "–ü—è—Ç–Ω–∞–¥—Ü–∞—Ç—å —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 15 },
        { uid: 20, name: "–°–≤–∞—Ä—â–∏–∫", subname: ["–°–≤–∞—Ä—â–∏–∫", "–ü–∏–≤–æ–≤–∞—Ä", "–ú–∞—Å—Ç–µ—Ä-–ü–∏–≤–æ–≤–∞—Ä"], description: "–î–≤–∞–¥—Ü–∞—Ç—å –ø—è—Ç—å —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 20 },
        { uid: 21, name: "–•–æ–∑—è–∏–Ω –ø–∏–≤–æ–≤–∞—Ä–Ω–∏", subname: ["–•–æ–∑—è–∏–Ω –ø–∏–≤–æ–≤–∞—Ä–Ω–∏", "–ú–∞–≥–∏—Å—Ç—Ä –ø–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–ö–æ—Ä–æ–ª—å –ü–∏–≤–æ–≤–∞—Ä–æ–≤"], description: "–ü—è—Ç—å–¥–µ—Å—è—Ç —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 25 },
        { uid: 22, name: "–ë–∞—Ä–º–µ–Ω", subname: ["–ë–∞—Ä–º–µ–Ω", "–ú–∞—Å—Ç–µ—Ä-–ë–∞—Ä–º–µ–Ω", "–ö–æ—Ä–æ–ª—å –ë–∞—Ä–º–µ–Ω–æ–≤"], description: "–°—Ç–æ —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 30 },
        { uid: 23, name: "–ü–æ—á–µ—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç", subname: ["–ü–æ—á–µ—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç", "–õ—é–±–∏—Ç–µ–ª—å –ø–∏–≤–∞", "–ü–∏–≤–Ω–æ–π –≥—É—Ä–º–∞–Ω"], description: "–î–≤–µ—Å—Ç–∏ —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 50 },
        { uid: 24, name: "–ü–∏–≤–Ω–æ–π –º–∞–≥–Ω–∞—Ç", subname: ["–ü–∏–≤–Ω–æ–π –º–∞–≥–Ω–∞—Ç", "–ë–æ–≥–∞—Ç—ã–π –ø–∏–≤–æ–≤–∞—Ä", "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –ü–∏–≤–∞"], description: "–ß–µ—Ç—ã—Ä–µ—Å—Ç–∞ —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 60 },
        { uid: 25, name: "–ü–∏–≤–Ω–æ–π –≥—É—Ä—É", subname: ["–ü–∏–≤–Ω–æ–π –≥—É—Ä—É", "–ú–∞—Å—Ç–µ—Ä-–ì—É—Ä–º–∞–Ω", "–õ–µ–≥–µ–Ω–¥–∞ –ü–∏–≤–∞"], description: "–í–æ—Å–µ–º—å—Å–æ—Ç —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 70 },
        { uid: 26, name: "–ü–∏–≤–Ω–æ–π –º–∞–≥–∏—Å—Ç—Ä", subname: ["–ü–∏–≤–Ω–æ–π –º–∞–≥–∏—Å—Ç—Ä", "–ú–∞–≥–∏—Å—Ç—Ä –ü–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–ö—Ä—ã–ª–∞—Ç—ã–π –ü–∏–≤–æ–≤–∞—Ä"], description: "–¢—ã—Å—è—á–∞ –¥–≤–µ—Å—Ç–∏ —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 80 },
        { uid: 27, name: "–ü–∏–≤–Ω–æ–π –∫–æ—Ä–æ–ª—å", subname: ["–ü–∏–≤–Ω–æ–π –∫–æ—Ä–æ–ª—å", "–ö–æ—Ä–æ–ª—å –ü–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–ü–∏–≤–Ω–æ–π –ë–æ–≥"], description: "–î–≤–µ —Ç—ã—Å—è—á–∏ –ø—è—Ç—å—Å–æ—Ç —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 90 },
        { uid: 28, name: "–ü–∏–≤–Ω–æ–π –∏–º–ø–µ—Ä–∞—Ç–æ—Ä", subname: ["–ü–∏–≤–Ω–æ–π –∏–º–ø–µ—Ä–∞—Ç–æ—Ä", "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –ü–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–í—Å–µ–º–æ–≥—É—â–∏–π –ü–∏–≤–æ–≤–∞—Ä"], description: "–ü—è—Ç—å —Ç—ã—Å—è—á —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 100 },
        { uid: 29, name: "–ü–∏–≤–Ω–æ–π –±–æ–≥", subname: ["–ü–∏–≤–Ω–æ–π –±–æ–≥", "–ë–æ–≥ –ü–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–í—Å–µ–≤—ã—à–Ω–∏–π –ü–∏–≤–æ–≤–∞—Ä"], description: "–î–µ—Å—è—Ç—å —Ç—ã—Å—è—á —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 120 },
        { uid: 30, name: "–ü–∏–≤–Ω–æ–π —Ç–∏—Ç–∞–Ω", subname: ["–ü–∏–≤–Ω–æ–π —Ç–∏—Ç–∞–Ω", "–¢–∏—Ç–∞–Ω –ü–∏–≤–æ–≤–∞—Ä–µ–Ω–∏—è", "–ù–µ–ø–æ–±–µ–¥–∏–º—ã–π –ü–∏–≤–æ–≤–∞—Ä"], description: "–î–≤–∞–¥—Ü–∞—Ç—å —Ç—ã—Å—è—á —Å–ª–∏–≤–æ—á–Ω—ã—Ö –ø–∏–≤", counter: 150 },
    ]
    if (analyzer) {
        const analyze_birthday_counter: Analyzer | null = await prisma.analyzer.update({ where: { id: analyzer.id }, data: { beer: { increment: 1 } } })
        if (analyze_birthday_counter) { 
            await Logger(`In a analyzer, module detected kvass for user UID ${id_user} by user ${context.peerId}`)
            for (const i in birthday) {
                if (analyze_birthday_counter.beer >= birthday[i].counter) {
                    const achive_check = await prisma.achievement.findFirst({ where: { uid: birthday[i].uid, id_user: id_user } })
                    if (!achive_check) {
                        const achive_add = await prisma.achievement.create({ data: { uid: birthday[i].uid, name: `ü•É ${birthday[i].name} - ${birthday[i].subname[randomInt(0, 3)]}`, id_user: id_user } })
                        if (achive_add) {
                            const xp = randomInt(1, 15)
                            await prisma.user.update({ where: { id: id_user }, data: { medal: { increment: xp } } })
                            await vk.api.messages.send({
                                peer_id: user.idvk,
                                random_id: 0,
                                message: `üåü –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name}`
                            })
                            await vk.api.messages.send({
                                peer_id: chat_id,
                                random_id: 0,
                                message: `üåü @id${user.idvk}(${user.name}) –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name} –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ —Å—á–µ—Ç ${xp}üîò.`
                            })
                        }
                    }
                }
            }
        }
    }
}

export async function Analyzer_Convert_MO_Counter(context: any) {
    const user: User | null | undefined = await Person_Get(context)
    if (!user) { return }
    const id_user = user.id
    await Analyzer_Init(id_user)
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    const birthday: Achivied[] = [
        { uid: 76, name: "–ù–æ–≤–∏—á–æ–∫ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏", subname: ["–ú–∞–ª–æ–æ–ø—ã—Ç–Ω—ã–π", "–û–ø—ã—Ç–Ω—ã–π", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª"], description: "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –º–∞–≥–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –≤ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–∞–ª–µ–æ–Ω–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 1 },
        { uid: 77, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω–Ω–∏–∫", subname: ["–ù–∞–¥–µ–∂–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫", "–û–ø—ã—Ç–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫"], description: "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –º–∞–≥–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –≤ –≥–∞–ª–µ–æ–Ω—ã –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Å–Ω–æ–≤–µ. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 5 },
        { uid: 78, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç", subname: ["–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "–ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å", "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å"], description: "–£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –¥–æ—Ö–æ–¥ –≤ –∏–≥—Ä–µ, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è –±–æ–ª—å—à–µ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–∞–ª–µ–æ–Ω–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 10 },
        { uid: 79, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç"], description: "–°—Ç–∞–Ω—å—Ç–µ –±–æ–≥–∞—Ç—ã–º –∏ –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã–º –≤ –∏–≥—Ä–µ, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–º–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 15 },
        { uid: 80, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä"], description: "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ –º–∏–ª–ª–∏–æ–Ω—ã –≥–∞–ª–µ–æ–Ω–æ–≤, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è –º–∞–≥–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –≤ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–º–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 25 },
        { uid: 81, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç-–∏–Ω–≤–µ—Å—Ç–æ—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç-–∏–Ω–≤–µ—Å—Ç–æ—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–∏–Ω–≤–µ—Å—Ç–æ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–∏–Ω–≤–µ—Å—Ç–æ—Ä"], description: "–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –≥–∞–ª–µ–æ–Ω—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –µ—â–µ –±–æ–ª—å—à–µ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–º–∞ –≤–ª–æ–∂–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 50 },
        { uid: 82, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –±–∞–Ω–∫–∏—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –±–∞–Ω–∫–∏—Ä", "–û–ø—ã—Ç–Ω—ã–π –±–∞–Ω–∫–∏—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–Ω–∫–∏—Ä"], description: "–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –≤ –∏–≥—Ä–µ –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è –º–∞–≥–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É—è —Å–≤–æ–∏ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 100 },
        { uid: 83, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç-–±–∏–∑–Ω–µ—Å–º–µ–Ω", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç-–±–∏–∑–Ω–µ—Å–º–µ–Ω", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–±–∏–∑–Ω–µ—Å–º–µ–Ω", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–±–∏–∑–Ω–µ—Å–º–µ–Ω"], description: "–û—Ç–∫—Ä–æ–π—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å –≤ –∏–≥—Ä–µ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –º–∏–ª–ª–∏–æ–Ω—ã –≥–∞–ª–µ–æ–Ω–æ–≤, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—è –º–∞–≥–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç –≤ –≥–∞–ª–µ–æ–Ω—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –±–∏–∑–Ω–µ—Å-–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 200 },
        { uid: 84, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç-–º–∞–≥–∏—Å—Ç—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç-–º–∞–≥–∏—Å—Ç—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–º–∞–≥–∏—Å—Ç—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–º–∞–≥–∏—Å—Ç—Ä"], description: "–°—Ç–∞–Ω—å—Ç–µ –º–∞–≥–∏—Å—Ç—Ä–æ–º –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞–ª–µ–æ–Ω–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 400 },
        { uid: 85, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç-–∏–º–ø–µ—Ä–∞—Ç–æ—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç-–∏–º–ø–µ—Ä–∞—Ç–æ—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–∏–º–ø–µ—Ä–∞—Ç–æ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç-–∏–º–ø–µ—Ä–∞—Ç–æ—Ä"], description: "–°—Ç–∞–Ω—å—Ç–µ –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –∏ —Ü–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 800 },
        { uid: 86, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–∏—Å—Ç—Ä-–≤–æ–ª—à–µ–±–Ω–∏–∫", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–∏—Å—Ç—Ä-–≤–æ–ª—à–µ–±–Ω–∏–∫", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-–≤–æ–ª—à–µ–±–Ω–∏–∫", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-–≤–æ–ª—à–µ–±–Ω–∏–∫"], description: "–°—Ç–∞–Ω—å—Ç–µ –º–∞–≥–∏—Å—Ç—Ä–æ–º –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 1200 },
        { uid: 87, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–∏—Å—Ç—Ä-–∞–ª—Ö–∏–º–∏–∫", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–∏—Å—Ç—Ä-–∞–ª—Ö–∏–º–∏–∫", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-–∞–ª—Ö–∏–º–∏–∫", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-–∞–ª—Ö–∏–º–∏–∫"], description: "–°—Ç–∞–Ω—å—Ç–µ –º–∞–≥–∏—Å—Ç—Ä–æ–º –≤ –∞–ª—Ö–∏–º–∏–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 2500 },
        { uid: 88, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–∏—Å—Ç—Ä-—á–∞—Ä–æ–¥–µ–π", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–∏—Å—Ç—Ä-—á–∞—Ä–æ–¥–µ–π", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-—á–∞—Ä–æ–¥–µ–π", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä-—á–∞—Ä–æ–¥–µ–π"], description: "–°—Ç–∞–Ω—å—Ç–µ –º–∞–≥–∏—Å—Ç—Ä–æ–º –≤ —á–∞—Ä–æ–¥–µ–π—Å—Ç–≤–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 5000 },
        { uid: 89, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –≤–ª–∞—Å—Ç–µ–ª–∏–Ω", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –≤–ª–∞—Å—Ç–µ–ª–∏–Ω", "–û–ø—ã—Ç–Ω—ã–π –≤–ª–∞—Å—Ç–µ–ª–∏–Ω", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–ª–∞—Å—Ç–µ–ª–∏–Ω"], description: "–°—Ç–∞–Ω—å—Ç–µ –≤–ª–∞—Å—Ç–µ–ª–∏–Ω–æ–º –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –≤—ã—Å—à–µ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 10000 },
        { uid: 90, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –±–æ–≥–∞—Ç—ã—Ä—å", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –±–æ–≥–∞—Ç—ã—Ä—å", "–û–ø—ã—Ç–Ω—ã–π –±–æ–≥–∞—Ç—ã—Ä—å", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ–≥–∞—Ç—ã—Ä—å"], description: "–°—Ç–∞–Ω—å—Ç–µ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–º –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –≤ –≥–∞–ª–µ–æ–Ω—ã, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.", counter: 20000 }
    ]
    if (analyzer) {
        const analyze_birthday_counter: Analyzer | null = await prisma.analyzer.update({ where: { id: analyzer.id }, data: { convert_mo: { increment: 1 } } })
        if (analyze_birthday_counter) { 
            console.log(`Analyzer module detected convert MO for user UID ${id_user}`)
            for (const i in birthday) {
                if (analyze_birthday_counter.convert_mo >= birthday[i].counter) {
                    const achive_check = await prisma.achievement.findFirst({ where: { uid: birthday[i].uid, id_user: id_user } })
                    if (!achive_check) {
                        const achive_add = await prisma.achievement.create({ data: { uid: birthday[i].uid, name: `‚ú® ${birthday[i].name} - ${birthday[i].subname[randomInt(0, 3)]}`, id_user: id_user } })
                        if (achive_add) {
                            const xp = randomInt(1, 15)
                            await prisma.user.update({ where: { id: id_user }, data: { medal: { increment: xp } } })
                            await vk.api.messages.send({
                                peer_id: user.idvk,
                                random_id: 0,
                                message: `üåü –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name}`
                            })
                            await vk.api.messages.send({
                                peer_id: chat_id,
                                random_id: 0,
                                message: `üåü @id${user.idvk}(${user.name}) –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name} –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ —Å—á–µ—Ç ${xp}üßô.`
                            })
                        }
                    }
                }
            }
        }
    }
}

export async function Analyzer_Buying_Counter(context: any) {
    const user: User | null | undefined = await Person_Get(context)
    if (!user) { return }
    const id_user = user.id
    await Analyzer_Init(id_user)
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    const birthday: Achivied[] = [
        { uid: 91, name: "–ü–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞", subname: ["–ú–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥", "–ù–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø", "–ü—É—Ç—å –∫ —É—Å–ø–µ—Ö—É"], description: "–°–æ–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 1 },
        { uid: 92, name: "–ü–æ–∫—É–ø–∫–∞ –≥–æ–¥–∞", subname: ["–õ—É—á—à–∞—è –ø–æ–∫—É–ø–∫–∞", "–ü–æ–∫—É–ø–∫–∞ –≥–æ–¥–∞", "–°–∞–º–∞—è –∫—Ä—É—Ç–∞—è –ø–æ–∫—É–ø–∫–∞"], description: "–ö—É–ø–∏—Ç–µ —Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 5 },
        { uid: 93, name: "–¢–æ—Ä–≥–æ–≤–µ—Ü –≥–æ–¥–∞", subname: ["–õ—É—á—à–∏–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", "–¢–æ—Ä–≥–æ–≤–µ—Ü –≥–æ–¥–∞", "–°–∞–º—ã–π —É—Å–ø–µ—à–Ω—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü"], description: "–ü—Ä–æ–¥–∞–π—Ç–µ —Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 10 },
        { uid: 94, name: "–ó–∞–≤—Å–µ–≥–¥–∞—Ç–∞–π –∫–æ—Å–æ–≥–æ –ø–µ—Ä–µ—É–ª–∫–∞", subname: ["–†–µ–≥—É–ª—è—Ä–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å", "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç", "–õ—é–±–∏–º–µ—Ü —Ç–æ—Ä–≥–æ–≤—Ü–µ–≤"], description: "–°–æ–≤–µ—Ä—à–∏—Ç–µ 5 –ø–æ–∫—É–ø–æ–∫ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 15 },
        { uid: 95, name: "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä", "–û–ø—ã—Ç–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∏–¥—ã –ø–∏—Ç–æ–º—Ü–µ–≤, —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞ –∏ –≤–æ–ª—à–µ–±–Ω—ã—Ö –ø–∞–ª–æ—á–µ–∫ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 25 },
        { uid: 96, name: "–í–æ–ª—à–µ–±–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è", subname: ["–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è", "–°—Ä–µ–¥–Ω—è—è –∫–æ–ª–ª–µ–∫—Ü–∏—è", "–õ—É—á—à–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –≤–∏–¥—ã –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 50 },
        { uid: 97, name: "–ú–∞—Å—Ç–µ—Ä –∫–≤–∏–¥–¥–∏—á–∞", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞—Å—Ç–µ—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –≤–∏–¥—ã —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 100 },
        { uid: 98, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫", subname: ["–ú–∞–ª–µ–Ω—å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫", "–°—Ä–µ–¥–Ω–∏–π –∑–æ–æ–ø–∞—Ä–∫", "–ë–æ–ª—å—à–æ–π –∑–æ–æ–ø–∞—Ä–∫"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∏–¥—ã –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 200 },
        { uid: 99, name: "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –ø–∞–ª–æ—á–µ–∫", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä", "–û–ø—ã—Ç–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –≤–∏–¥—ã –≤–æ–ª—à–µ–±–Ω—ã—Ö –ø–∞–ª–æ—á–µ–∫ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 400 },
        { uid: 100, name: "–ö–≤–∏–¥–¥–∏—á–Ω—ã–π —Ñ–∞–Ω–∞—Ç", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π —Ñ–∞–Ω–∞—Ç", "–û–ø—ã—Ç–Ω—ã–π —Ñ–∞–Ω–∞—Ç", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–Ω–∞—Ç"], description: "–ö—É–ø–∏—Ç–µ –≤—Å–µ –≤–∏–¥—ã —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞ –∏ –ø–∏—Ç–æ–º—Ü–µ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–≤–∏–¥–¥–∏—á–µ–º –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 800 },
        { uid: 101, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", "–û–ø—ã—Ç–Ω—ã–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∏–ª–ª–∏–æ–Ω–µ—Ä"], description: "–ü–æ—Ç—Ä–∞—Ç—å—Ç–µ 10000 –≥–∞–ª–µ–æ–Ω–æ–≤ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 1200 },
        { uid: 102, name: "–õ—É—á—à–∏–π –¥—Ä—É–≥ –ø–∏—Ç–æ–º—Ü–µ–≤", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –¥—Ä—É–≥", "–î—Ä—É–≥ –Ω–∞ –≤—Å–µ –≤—Ä–µ–º–µ–Ω–∞", "–õ—É—á—à–∏–π –¥—Ä—É–≥"], description: "–ö—É–ø–∏—Ç–µ –∏ –≤—ã—Ä–∞—â–∏–≤–∞–π—Ç–µ –∫–∞–∂–¥–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 2500 },
        { uid: 103, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", "–û–ø—ã—Ç–Ω—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü"], description: "–ü—Ä–æ–¥–∞–π—Ç–µ 100 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 5000 },
        { uid: 104, name: "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∞–≥–Ω–∞—Ç", subname: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π –º–∞–≥–Ω–∞—Ç", "–û–ø—ã—Ç–Ω—ã–π –º–∞–≥–Ω–∞—Ç", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç"], description: "–ü–æ—Ç—Ä–∞—Ç—å—Ç–µ 1000 –≥–∞–ª–µ–æ–Ω–æ–≤ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 10000 },
        { uid: 105, name: "–ö–æ—Ä–æ–ª—å –∫–æ—Å–æ–≥–æ –ø–µ—Ä–µ—É–ª–∫–∞", subname: ["–ú–∞–ª–µ–Ω—å–∫–∏–π –∫–æ—Ä–æ–ª—å", "–°—Ä–µ–¥–Ω–∏–π –∫–æ—Ä–æ–ª—å", "–í–µ–ª–∏–∫–∏–π –∫–æ—Ä–æ–ª—å"], description: "–°–æ–≤–µ—Ä—à–∏—Ç–µ 10 –ø–æ–∫—É–ø–æ–∫ –ø–∏—Ç–æ–º—Ü–µ–≤, —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞ –∏ –≤–æ–ª—à–µ–±–Ω—ã—Ö –ø–∞–ª–æ—á–µ–∫ –≤ –∫–æ—Å–æ–º –ø–µ—Ä–µ—É–ª–∫–µ.", counter: 20000 },
    ]
    if (analyzer) {
        const analyze_birthday_counter: Analyzer | null = await prisma.analyzer.update({ where: { id: analyzer.id }, data: { buying: { increment: 1 } } })
        if (analyze_birthday_counter) { 
            console.log(`Analyzer module detected buying for user UID ${id_user}`)
            for (const i in birthday) {
                if (analyze_birthday_counter.buying >= birthday[i].counter) {
                    const achive_check = await prisma.achievement.findFirst({ where: { uid: birthday[i].uid, id_user: id_user } })
                    if (!achive_check) {
                        const achive_add = await prisma.achievement.create({ data: { uid: birthday[i].uid, name: `üõí ${birthday[i].name} - ${birthday[i].subname[randomInt(0, 3)]}`, id_user: id_user } })
                        if (achive_add) {
                            const xp = randomInt(1, 15)
                            await prisma.user.update({ where: { id: id_user }, data: { medal: { increment: xp } } })
                            await vk.api.messages.send({
                                peer_id: user.idvk,
                                random_id: 0,
                                message: `üåü –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name}`
                            })
                            await vk.api.messages.send({
                                peer_id: chat_id,
                                random_id: 0,
                                message: `üåü @id${user.idvk}(${user.name}) –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name} –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ —Å—á–µ—Ç ${xp}üîò.`
                            })
                        }
                    }
                }
            }
        }
    }
}
/*
export async function Analyzer_THERE_Counter(context: any) {
    const user: any = await prisma.user.findFirst({ where: { idvk: context.peerId } })
    const id_user = user.id
    await Analyzer_Init(id_user)
    const analyzer: Analyzer | null = await prisma.analyzer.findFirst({ where: { id_user: id_user } })
    const birthday: Achivied[] = [
        { uid: 0, name: "", subname: [], description: "", counter: 0 }, 
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
        { uid: 0, name: "", subname: [], description: "", counter: 0 },
    ]
    if (analyzer) {
        const analyze_birthday_counter: Analyzer | null = await prisma.analyzer.update({ where: { id: analyzer.id }, data: { THERE: { increment: 1 } } })
        if (analyze_birthday_counter) { 
            console.log(`Analyzer module detected beer bambuke premium for user UID ${id_user}`)
            for (const i in birthday) {
                if (analyze_birthday_counter.THERE >= birthday[i].counter) {
                    const achive_check = await prisma.achievement.findFirst({ where: { uid: birthday[i].uid, id_user: id_user } })
                    if (!achive_check) {
                        const achive_add = await prisma.achievement.create({ data: { uid: birthday[i].uid, name: `THERE ${birthday[i].name} - ${birthday[i].subname[randomInt(0, 3)]}`, id_user: id_user } })
                        if (achive_add) {
                            const xp = randomInt(1, 15)
                            await prisma.user.update({ where: { id: id_user }, data: { xp: { increment: xp } } })
                            await vk.api.messages.send({
                                peer_id: user.idvk,
                                random_id: 0,
                                message: `üåü –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name}`
                            })
                            await vk.api.messages.send({
                                peer_id: chat_id,
                                random_id: 0,
                                message: `üåü @id${user.idvk}(${user.name}) –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achive_add.name} –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ —Å—á–µ—Ç ${xp}üßô.`
                            })
                        }
                    }
                }
            }
        }
    }
}
*/