import { PrismaClient } from "@prisma/client";
import { HearManager } from "@vk-io/hear";
import { randomInt } from "crypto";
import { Keyboard, KeyboardBuilder } from "vk-io";
import { IQuestionMessageContext } from "vk-io-question";
import { vk } from "..";

const prisma = new PrismaClient()

export function InitGameRoutes(hearManager: HearManager<IQuestionMessageContext>): void {
	hearManager.hear(/init/, async (context: any) => {
		const roles = [ 'user', 'admin' ]
		const res = { count_role: 0, count_shop: 0, count_item: 0, count_alliance: 0 }
		for (const rol of roles) {
			const rol_check = await prisma.role.findFirst({ where: { name: rol } })
			if (!rol_check) { 
				const rol_cr = await prisma.role.create({ data: { name: rol } }) 
				console.log(`Init role id: ${rol_cr.id} name: ${rol_cr.name} for users`)
				res.count_role++
			} else {
				console.log(`Already init role name: ${rol} for users`)
			}
		}
		const categories_shop = [ `–ü–∏—Ç–æ–º—Ü—ã`, `–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`, `–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ —Ä–µ–ª–∏–∫–≤–∏–∏`, `–°–ø–æ—Ä—Ç`]
		for (const cat of categories_shop) {
			const cat_check = await prisma.category.findFirst({ where: { name: cat } })
			if (!cat_check) { 
				const cat_cr = await prisma.category.create({ data: { name: cat } }) 
				console.log(`Init category shop id: ${cat_cr.id} name: ${cat_cr.name} for users`)
				res.count_shop++
			} else {
				console.log(`Already init category shop name: ${cat} for users`)
			}
		}
		const items = [
			{ 
				target: `–ü–∏—Ç–æ–º—Ü—ã`, item: [
					{ name: `–•–æ–º—è—á–æ–∫`, price: 10, type: 'unlimited' }, { name: `–õ—è–≥—É—à–∫–∞`, price: 10, type: 'unlimited' }, 
					{ name: `–ñ–∞–±–∞`, price: 15, type: 'unlimited' }, { name: `–ö—Ä—ã—Å–∞`, price: 25, type: 'unlimited' }, 
					{ name: `–ö–æ—Ç (–ª—é–±–æ–≥–æ —Ä–∞—Å–∫—Ä–∞—Å–∞, –∫—Ä–æ–º–µ —á–µ—Ä–Ω–æ–≥–æ)`, price: 50, type: 'unlimited' }, { name: `–ö–æ—Ç —á–µ—Ä–Ω—ã–π`, price: 60, type: 'unlimited' }, 
					{ name: `–•–æ—Ä–µ–∫`, price: 90, type: 'unlimited' }, { name: `–ö–∞–ø–∏–±–∞—Ä–∞`, price: 110, type: 'unlimited' }, 
					{ name: `–°–æ–≤–∞`, price: 150, type: 'unlimited' }, { name: `–ï–Ω–æ—Ç`, price: 155, type: 'unlimited' }, 
					{ name: `–õ–∏—Å`, price: 180, type: 'unlimited' }, { name: `–õ—É–∫–æ—Ç—Ä—É—Å`, price: 220, type: 'unlimited' }, 
					{ name: `–®–∏—à—É–≥–∞`, price: 300, type: 'unlimited' }, { name: `–ù—é—Ö–ª–µ—Ä`, price: 400, type: 'unlimited' },
				]
			},
			{ 
				target: `–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã`, item: [
					{ name: `–§–∞–ª—å—à–∏–≤—ã–µ –≤–æ–ª—à–µ–±–Ω—ã–µ –ø–∞–ª–æ—á–∫–∏-–Ω–∞–¥—É–≤–∞–ª–æ—á–∫–∏`, price: 160, type: 'unlimited' }, { name: `–ë–µ–∑–≥–æ–ª–æ–≤–∞—è —à–ª—è–ø–∞`, price: 160, type: 'unlimited' }, 
					{ name: `–í—Ä–µ–¥–Ω–æ—Å–∫–æ–ø`, price: 175, type: 'unlimited' }, { name: `–î—Ä–∞—á–ª–∏–≤—ã–π —Ç–µ–ª–µ—Å–∫–æ–ø`, price: 175, type: 'unlimited' }, 
					{ name: `–ö—É—Å–∞—á–∞—è –∫—Ä—É–∂–∫–∞`, price: 180, type: 'unlimited' }, { name: `–ü–µ—Ä—É–∞–Ω—Å–∫–∏–π –ø–æ—Ä–æ—à–æ–∫ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ç—å–º—ã`, price: 185, type: 'unlimited' }, 
					{ name: `–°–∞–ø–æ–≥–∏-—Å–∫–æ—Ä–æ—Ö–æ–¥—ã`, price: 185, type: 'unlimited' }, { name: `–û–¥–µ–∂–¥–∞-—â–∏—Ç`, price: 192, type: 'unlimited' }, 
				]
			},
			{ 
				target: `–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ —Ä–µ–ª–∏–∫–≤–∏–∏`, item: [
					{ name: `–î–µ–ª—é–º–∏–Ω–∞—Ç–æ—Ä`, price: 500, type: 'unlimited' }, { name: `–ú–∞—Ö–æ–≤–∏–∫ –≤—Ä–µ–º–µ–Ω–∏`, price: 990, type: 'unlimited' }, 
					{ name: `–ú–∞–Ω—Ç–∏—è-–Ω–µ–≤–∏–¥–∏–º–∫–∞`, price: 1500, type: 'unlimited' },
				]
			},
			{ 
				target: `–°–ø–æ—Ä—Ç`, item: [
					{ name: `–§–æ—Ä–º–∞ –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞`, price: 40, type: 'unlimited' }, { name: `–û–±–º—É–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—Ç–∞—Ä—è`, price: 55, type: 'unlimited' }, 
					{ name: `–ù–∞–±–æ—Ä –¥–ª—è –∏–≥—Ä—ã –≤ –∫–≤–∏–¥–¥–∏—á`, price: 90, type: 'unlimited' }, { name: `–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –º–µ—Ç–ª–∞`, price: 110, type: 'unlimited' }, 
					{ name: `–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –∫–≤–∏–¥–¥–∏—á–∞`, price: 200, type: 'unlimited' }, 
				]
			}
		]
		for (const el of items) {
			const category = await prisma.category.findFirst({ where: { name: el.target } })
			if (!category) { await context.send(`–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${el.target}`); continue }
			for (const item of el.item) {
				const item_check = await prisma.item.findFirst({ where: { name: item.name, id_category: category.id } })
				if (!item_check) { 
					const item_cr = await prisma.item.create({ data: { name: item.name, price: item.price, id_category: category.id, type: item.type } }) 
					console.log(`Init item shop id: ${item_cr.id} name: ${item_cr.name} for users`)
					res.count_item++
				} else {
					console.log(`Already init category shop name: ${item.name} for users`)
				}
			}
		}
		const alliance = [
			`https://vk.com/public170217030`, `https://vk.com/hogwarts_anti`, 
			`https://vk.com/talentummagic`, `https://vk.com/bilmor`, 
			`https://vk.com/ilvermorny_magic`, `https://vk.com/academyofmagicartes`, 
			`https://vk.com/club220783818`, `https://vk.com/lva_academy`, 
			`https://vk.com/italian_magic_academy`, `https://vk.com/hogonline`, 
			`https://vk.com/ho_briston`, `https://vk.com/hawkford`, 
			`https://vk.com/a_kiris`, `https://vk.com/hogwarts.school_rp`, 
			`https://vk.com/koldovstoretz_russia`, `https://vk.com/hogwarts_magic_top`, 
			`https://vk.com/best_terra_britannia`, `https://vk.com/breakbills_academy`,
			`https://vk.com/unimagicalarts`, `https://vk.com/rolle_wizard`,
			//``, ``,
		]
		for (const alli of alliance) {
			const temp = alli.replace(/.*[/]/, "");
			const [group] = await vk.api.groups.getById({ group_id: temp });
			if (!group) { continue }
			const alli_check = await prisma.alliance.findFirst({ where: { idvk: group.id } })
			if (!alli_check) {
				const alli_cr = await prisma.alliance.create({ data: { name: group.name!, idvk: group.id!, }})
				console.log(`Init alliance id: ${alli_cr.id} name: ${alli_cr.name} for users`)
				res.count_alliance++
			} else {
				console.log(`Already init alliance name: ${group} for users`)
			}
		}
		context.send(`‚úÖ –ò–≥—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ.\n\n üë´ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —Ä–æ–ª–µ–π: ${res.count_role}\n üé™ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${res.count_shop}\n üëú –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${res.count_item}\n üè† –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —Å–æ—é–∑–æ–≤: ${res.count_alliance}`)
	})
}